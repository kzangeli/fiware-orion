# Copyright 2019 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Update With a False Registration and one more value in provider

--SHELL-INIT--
dbInit CB
dbInit CP1
dbInit CP2
brokerStart CB
brokerStart CP1
brokerStart CP2

--SHELL--

#
# FIXME: Step 4 gives a response of 404 Not Found but without "description": "Attributes that were not updated: { E1-T1 : [A1] }"
#        In NGSIv1 404 is also given, but the correct description is present:
#           HTTP/1.1 404 Not Found
#           Content-Length: 95
#           Content-Type: application/json
#           Fiware-Correlator: REGEX([0-9a-f\-]{36})
#           Date: REGEX(.*)
#
#           {
#               "description": "Attributes that were not updated: { E1-T1 : [A1] }",
#               "error": "PartialUpdate"
#           }
#
#        Similar failures:
#          o 100_percent_ngsiv2_update_forward_depends_on_attr_field.test
#          o 100_percent_ngsiv2_update_found_and_not_found_in_local_and_three_cprs.test
#          o 100_percent_ngsiv2_update_false_registration_and_one_more_value.test
#
# 01. Register E1/T1/A1-CP1 in CB
# 02. Register E1/T1/A2-CP2 in CB
# 03. Create E1/T1/A2 in CP2
# 04. Update E1/T1/A1+A2 in CB (A2 OK, A1 NOT OK)
# 05. Query E1/T1/A2 in CP2 (A2 Via CB in step 04)
#

echo "01. Register E1/T1/A1-CP1 in CB"
echo "==============================="
payload='{
  "dataProvided": {
    "entities": [
      {
        "type": "T1",
        "id": "E1"
      }
    ],
    "attrs": [ "A1" ]
  },
  "provider": {
    "http": {
      "url": "http://localhost:'${CP1_PORT}'/v2"
    },
    "legacyForwarding": false
  }
}'
orionCurl --url /v2/registrations --payload "$payload"
echo
echo


echo "02. Register E1/T1/A2-CP2 in CB"
echo "==============================="
payload='{
  "dataProvided": {
    "entities": [
      {
        "type": "T1",
        "id": "E1"
      }
    ],
    "attrs": [ "A2" ]
  },
  "provider": {
    "http": {
      "url": "http://localhost:'${CP2_PORT}'/v2"
    },
    "legacyForwarding": false
  }
}'
orionCurl --url /v2/registrations --payload "$payload"
echo
echo


echo "03. Create E1/T1/A2 in CP2"
echo "=========================="
payload='{
  "type": "T1",
  "id":   "E1",
  "A2": {
    "type": "string",
    "value": "A2 in CP2"
  }
}'
orionCurl --url /v2/entities --payload "$payload" --port $CP2_PORT
echo
echo


echo "04. Update E1/T1/A1+A2 in CB (A2 OK, A1 NOT OK)"
echo "==============================================="
payload='{
  "A1": {
     "type": "string",
     "value": "A1 Via CB in step 04"
  },
  "A2": {
     "type": "string",
     "value": "A2 Via CB in step 04"
  }
}'
orionCurl --url '/v2/entities/E1/attrs?type=T1' -X PATCH --payload "$payload"
echo
echo


echo "05. Query E1/T1/A2 in CP2"
echo "========================="
orionCurl --url '/v2/entities?id=E1&type=T1&attrs=A2' --port $CP2_PORT
echo
echo


--REGEXPECT--
01. Register E1/T1/A1-CP1 in CB
===============================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/registrations/REGEX([0-9a-f\-]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Register E1/T1/A2-CP2 in CB
===============================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/registrations/REGEX([0-9a-f\-]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Create E1/T1/A2 in CP2
==========================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=T1
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. Update E1/T1/A1+A2 in CB (A2 OK, A1 NOT OK)
===============================================
HTTP/1.1 404 Not Found
Content-Length: 95
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "The requested entity has not been found. Check type and id", 
    "error": "NotFound"
}


05. Query E1/T1/A2 in CP2
=========================
HTTP/1.1 200 OK
Content-Length: 93
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "A2": {
            "metadata": {},
            "type": "string",
            "value": "A2 Via CB in step 04"
        },
        "id": "E1",
        "type": "T1"
    }
]


--TEARDOWN--
brokerStop CB
brokerStop CP1
brokerStop CP2
dbDrop CB
dbDrop CP1
dbDrop CP2
