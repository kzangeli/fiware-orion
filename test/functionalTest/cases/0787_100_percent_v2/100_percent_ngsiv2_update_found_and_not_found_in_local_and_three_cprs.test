# Copyright 2019 Telefonica Investigacion y Desarrollo, S.A.U
#
# This file is part of Orion Context Broker.
#
# Orion Context Broker is free software: you can redistribute it and/or
# modify it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# Orion Context Broker is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Affero
# General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with Orion Context Broker. If not, see http://www.gnu.org/licenses/.
#
# For those usages not covered by this license please contact with
# iot_support at tid dot es

# VALGRIND_READY - to mark the test ready for valgrindTestSuite.sh

--NAME--
Update Found And Not Found In Local And Three CPrs

--SHELL-INIT--
dbInit CB
dbInit CP1
dbInit CP2
dbInit CP3
brokerStart CB
brokerStart CP1
brokerStart CP2
brokerStart CP3

--SHELL--

#
# The purpose of this test is to verify that 'one FOUND and one NOT-FOUND' from each of the three 
# Context Providers and in the local database works correctly.
# So, all of them will have one attribute that exists and one that doesn't exist
#   - CP1  A1 (+!A2)
#   - CP2  A3 (+!A4)
#   - CP3  A5 (+!A6)
#   - CB:  A7 (+!A8)
#
# 01. Create E1/T1/A1 in CP1
# 02. Create E1/T1/A3 in CP2
# 03. Create E1/T1/A5 in CP3
# 04. Register E1/T1/A1+A2 in CB, provApp: CP1
# 05. Register E1/T1/A3+A4 in CB, provApp: CP2
# 06. Register E1/T1/A5+A6 in CB, provApp: CP3
# 07. Create E1/T1/A7 in CB
# 08. Update/UPDATE E1/A1+A2+A3+A4+A5+A6+A7+A8
# 09. Query E1/{}
#
# FIXME: Step 8 complains only about non-existing attribute A8, but should also complain about A2, A4, and A6
#        Seems like the forwarded updates CREATE the attrs that should not exist.
#        There are other similar failures in functests:
#          o 100_percent_ngsiv2_update_forward_depends_on_attr_field.test
#          o 100_percent_ngsiv2_update_false_registration_and_one_more_value.test
#          o 100_percent_ngsiv2_update_false_registration_and_one_more_value_in_provider.test
#
# FIXME: Step 9 doesn't give all attributes as key-values.
#        The correct response should be:
#        [
#          {
#            "A1": "A1 Via CB",
#            "A3": "A3 Via CB",
#            "A5": "A5 Via CB",
#            "A7": "A7 Via CB",
#            "id": "E1",
#            "type": "T1"
#          }
#        ]
#
#        Only A7 (which is a local attribute) comes as keyValues.
#
#        Same error detected in:
#          o 100_percent_ngsiv2_update_forward_depends_on_attr_field.test
#
#
echo "01. Create E1/T1/A1 in CP1"
echo "=========================="
payload='{
  "type": "T1",
  "id":   "E1",
  "A1": {
    "type": "string",
    "value": "A1 On CP1"
  }
}'
orionCurl --url /v2/entities --payload "$payload" --port $CP1_PORT
echo
echo


echo "02. Create E1/T1/A3 in CP2"
echo "=========================="
payload='{
  "type": "T1",
  "id":   "E1",
  "A3": {
    "type": "string",
    "value": "A3 On CP2"
  }
}'
orionCurl --url /v2/entities --payload "$payload" --port $CP2_PORT
echo
echo


echo "03. Create E1/T1/A5 in CP3"
echo "=========================="
payload='{
  "type": "T1",
  "id":   "E1",
  "A5": {
    "type": "string",
    "value": "A5 On CP3"
  }
}'
orionCurl --url /v2/entities --payload "$payload" --port $CP3_PORT
echo
echo


echo "04. Register E1/T1/A1+A2 in CB, provApp: CP1"
echo "============================================"
payload='{
  "dataProvided": {
    "entities": [
      {
        "type": "T1",
        "id": "E1"
      }
    ],
    "attrs": [ "A1", "A2" ]
  },
  "provider": {
    "http": {
      "url": "http://localhost:'${CP1_PORT}'/v2"
    },
    "legacyForwarding": false
  }
}'
orionCurl --url /v2/registrations --payload "$payload"
echo
echo


echo "05. Register E1/T1/A3+A4 in CB, provApp: CP2"
echo "============================================"
payload='{
  "dataProvided": {
    "entities": [
      {
        "type": "T1",
        "id": "E1"
      }
    ],
    "attrs": [ "A3", "A4" ]
  },
  "provider": {
    "http": {
      "url": "http://localhost:'${CP2_PORT}'/v2"
    },
    "legacyForwarding": false
  }
}'
orionCurl --url /v2/registrations --payload "$payload"
echo
echo


echo "06. Register E1/T1/A5+A6 in CB, provApp: CP3"
echo "============================================"
payload='{
  "dataProvided": {
    "entities": [
      {
        "type": "T1",
        "id": "E1"
      }
    ],
    "attrs": [ "A5", "A6" ]
  },
  "provider": {
    "http": {
      "url": "http://localhost:'${CP3_PORT}'/v2"
    },
    "legacyForwarding": false
  }
}'
orionCurl --url /v2/registrations --payload "$payload"
echo
echo


echo "07. Create E1/T1/A7 in CB"
echo "========================="
payload='{
  "id": "E1",
  "type": "T1",
  "A7": "A7 On CB"
}'
orionCurl --url '/v2/entities/?options=keyValues' --payload "$payload"
echo
echo


echo "08. Update/UPDATE E1/A1+A2+A3+A4+A5+A6+A7+A8"
echo "============================================"
payload='{
  "A1": "A1 Via CB",
  "A2": "A2 Via CB",
  "A3": "A3 Via CB",
  "A4": "A4 Via CB",
  "A5": "A5 Via CB",
  "A6": "A6 Via CB",
  "A7": "A7 Via CB",
  "A8": "A8 Via CB"
}'
orionCurl --url '/v2/entities/E1/attrs?type=T1&options=keyValues' --payload "$payload" -X PATCH
echo
echo


echo "09. Query E1/{}"
echo "==============="
orionCurl --url '/v2/entities?id=E1&type=T1&options=keyValues'
echo
echo


--REGEXPECT--
01. Create E1/T1/A1 in CP1
==========================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=T1
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



02. Create E1/T1/A3 in CP2
==========================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=T1
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



03. Create E1/T1/A5 in CP3
==========================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=T1
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



04. Register E1/T1/A1+A2 in CB, provApp: CP1
============================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/registrations/REGEX([0-9a-f\-]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



05. Register E1/T1/A3+A4 in CB, provApp: CP2
============================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/registrations/REGEX([0-9a-f\-]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



06. Register E1/T1/A5+A6 in CB, provApp: CP3
============================================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/registrations/REGEX([0-9a-f\-]{24})
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



07. Create E1/T1/A7 in CB
=========================
HTTP/1.1 201 Created
Content-Length: 0
Location: /v2/entities/E1?type=T1
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)



08. Update/UPDATE E1/A1+A2+A3+A4+A5+A6+A7+A8
============================================
HTTP/1.1 404 Not Found
Content-Length: 92
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

{
    "description": "Attributes that were not updated: { E1-T1 : [A8] }",
    "error": "PartialUpdate"
}


09. Query E1/{}
===============
HTTP/1.1 200 OK
Content-Length: 207
Content-Type: application/json
Fiware-Correlator: REGEX([0-9a-f\-]{36})
Date: REGEX(.*)

[
    {
        "A1": {
            "metadata": {}, 
            "type": "Text", 
            "value": "A1 Via CB"
        }, 
        "A3": {
            "metadata": {}, 
            "type": "Text", 
            "value": "A3 Via CB"
        }, 
        "A5": {
            "metadata": {}, 
            "type": "Text", 
            "value": "A5 Via CB"
        }, 
        "A7": "A7 Via CB", 
        "id": "E1", 
        "type": "T1"
    }
]


--TEARDOWN--
brokerStop CB
brokerStop CP1
brokerStop CP2
brokerStop CP3
dbDrop CB
dbDrop CP1
dbDrop CP2
dbDrop CP3
